//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Main/InputSettings/InGameUIControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InGameUIControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InGameUIControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InGameUIControls"",
    ""maps"": [
        {
            ""name"": ""InGameUI"",
            ""id"": ""db1eeec3-d288-4e0b-9c3a-3fbb19e7b65f"",
            ""actions"": [
                {
                    ""name"": ""PauseGame"",
                    ""type"": ""Button"",
                    ""id"": ""4277db18-b26a-471c-ab8c-b621c626fda3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResumeGame"",
                    ""type"": ""Button"",
                    ""id"": ""f649f237-ff13-4a75-aece-482ae891c2c1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MainMenu"",
                    ""type"": ""Button"",
                    ""id"": ""3712d306-4367-410a-b196-46da78d61227"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextLevel"",
                    ""type"": ""Button"",
                    ""id"": ""056bde9f-09d6-4dd2-ba95-7143c3566a23"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenLevelCompUI"",
                    ""type"": ""Button"",
                    ""id"": ""4456a596-acfe-481b-9488-330203cc97fd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CloseLevelCompUI"",
                    ""type"": ""Button"",
                    ""id"": ""ad291658-cd2d-44e3-99d6-25ef19836338"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mute"",
                    ""type"": ""Button"",
                    ""id"": ""edb55e36-1661-4e3e-ba59-052abfab2426"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UnMute"",
                    ""type"": ""Button"",
                    ""id"": ""ac879f40-7600-43ff-8f74-75aa3d9bc55b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""19bf24a2-f170-4468-aae8-1b6a7837fa4a"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6acd539-755b-4fdf-a0f2-203efb02a796"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a644632c-127b-46d8-8b68-b476e23ff84b"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResumeGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b67b0079-f125-48f8-b76a-4bac361ed28f"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResumeGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""91890b13-2b35-40a6-aff3-155fb83b88f1"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""492d9d01-7a41-4c95-a55a-e126eaad1f21"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab9bee3e-99b4-47b3-ba4c-8099fdc2c77a"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""33081f49-3176-42a0-a434-806b01bc8acf"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""889e6ea2-dac5-42c9-883b-1d204e556a81"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseLevelCompUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5f8f0d1-f295-4a52-8225-2d8feaa65fea"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenLevelCompUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b5f3a88-e6d5-4965-ba8f-7b44f4d70b1d"",
                    ""path"": ""<Keyboard>/numpadMinus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1bbb2a0b-82d2-4ae5-aa69-40b31eedc01e"",
                    ""path"": ""<Keyboard>/numpadPlus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UnMute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // InGameUI
        m_InGameUI = asset.FindActionMap("InGameUI", throwIfNotFound: true);
        m_InGameUI_PauseGame = m_InGameUI.FindAction("PauseGame", throwIfNotFound: true);
        m_InGameUI_ResumeGame = m_InGameUI.FindAction("ResumeGame", throwIfNotFound: true);
        m_InGameUI_MainMenu = m_InGameUI.FindAction("MainMenu", throwIfNotFound: true);
        m_InGameUI_NextLevel = m_InGameUI.FindAction("NextLevel", throwIfNotFound: true);
        m_InGameUI_OpenLevelCompUI = m_InGameUI.FindAction("OpenLevelCompUI", throwIfNotFound: true);
        m_InGameUI_CloseLevelCompUI = m_InGameUI.FindAction("CloseLevelCompUI", throwIfNotFound: true);
        m_InGameUI_Mute = m_InGameUI.FindAction("Mute", throwIfNotFound: true);
        m_InGameUI_UnMute = m_InGameUI.FindAction("UnMute", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InGameUI
    private readonly InputActionMap m_InGameUI;
    private IInGameUIActions m_InGameUIActionsCallbackInterface;
    private readonly InputAction m_InGameUI_PauseGame;
    private readonly InputAction m_InGameUI_ResumeGame;
    private readonly InputAction m_InGameUI_MainMenu;
    private readonly InputAction m_InGameUI_NextLevel;
    private readonly InputAction m_InGameUI_OpenLevelCompUI;
    private readonly InputAction m_InGameUI_CloseLevelCompUI;
    private readonly InputAction m_InGameUI_Mute;
    private readonly InputAction m_InGameUI_UnMute;
    public struct InGameUIActions
    {
        private @InGameUIControls m_Wrapper;
        public InGameUIActions(@InGameUIControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @PauseGame => m_Wrapper.m_InGameUI_PauseGame;
        public InputAction @ResumeGame => m_Wrapper.m_InGameUI_ResumeGame;
        public InputAction @MainMenu => m_Wrapper.m_InGameUI_MainMenu;
        public InputAction @NextLevel => m_Wrapper.m_InGameUI_NextLevel;
        public InputAction @OpenLevelCompUI => m_Wrapper.m_InGameUI_OpenLevelCompUI;
        public InputAction @CloseLevelCompUI => m_Wrapper.m_InGameUI_CloseLevelCompUI;
        public InputAction @Mute => m_Wrapper.m_InGameUI_Mute;
        public InputAction @UnMute => m_Wrapper.m_InGameUI_UnMute;
        public InputActionMap Get() { return m_Wrapper.m_InGameUI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InGameUIActions set) { return set.Get(); }
        public void SetCallbacks(IInGameUIActions instance)
        {
            if (m_Wrapper.m_InGameUIActionsCallbackInterface != null)
            {
                @PauseGame.started -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnPauseGame;
                @PauseGame.performed -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnPauseGame;
                @PauseGame.canceled -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnPauseGame;
                @ResumeGame.started -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnResumeGame;
                @ResumeGame.performed -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnResumeGame;
                @ResumeGame.canceled -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnResumeGame;
                @MainMenu.started -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnMainMenu;
                @MainMenu.performed -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnMainMenu;
                @MainMenu.canceled -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnMainMenu;
                @NextLevel.started -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnNextLevel;
                @NextLevel.performed -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnNextLevel;
                @NextLevel.canceled -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnNextLevel;
                @OpenLevelCompUI.started -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnOpenLevelCompUI;
                @OpenLevelCompUI.performed -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnOpenLevelCompUI;
                @OpenLevelCompUI.canceled -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnOpenLevelCompUI;
                @CloseLevelCompUI.started -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnCloseLevelCompUI;
                @CloseLevelCompUI.performed -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnCloseLevelCompUI;
                @CloseLevelCompUI.canceled -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnCloseLevelCompUI;
                @Mute.started -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnMute;
                @Mute.performed -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnMute;
                @Mute.canceled -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnMute;
                @UnMute.started -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnUnMute;
                @UnMute.performed -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnUnMute;
                @UnMute.canceled -= m_Wrapper.m_InGameUIActionsCallbackInterface.OnUnMute;
            }
            m_Wrapper.m_InGameUIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PauseGame.started += instance.OnPauseGame;
                @PauseGame.performed += instance.OnPauseGame;
                @PauseGame.canceled += instance.OnPauseGame;
                @ResumeGame.started += instance.OnResumeGame;
                @ResumeGame.performed += instance.OnResumeGame;
                @ResumeGame.canceled += instance.OnResumeGame;
                @MainMenu.started += instance.OnMainMenu;
                @MainMenu.performed += instance.OnMainMenu;
                @MainMenu.canceled += instance.OnMainMenu;
                @NextLevel.started += instance.OnNextLevel;
                @NextLevel.performed += instance.OnNextLevel;
                @NextLevel.canceled += instance.OnNextLevel;
                @OpenLevelCompUI.started += instance.OnOpenLevelCompUI;
                @OpenLevelCompUI.performed += instance.OnOpenLevelCompUI;
                @OpenLevelCompUI.canceled += instance.OnOpenLevelCompUI;
                @CloseLevelCompUI.started += instance.OnCloseLevelCompUI;
                @CloseLevelCompUI.performed += instance.OnCloseLevelCompUI;
                @CloseLevelCompUI.canceled += instance.OnCloseLevelCompUI;
                @Mute.started += instance.OnMute;
                @Mute.performed += instance.OnMute;
                @Mute.canceled += instance.OnMute;
                @UnMute.started += instance.OnUnMute;
                @UnMute.performed += instance.OnUnMute;
                @UnMute.canceled += instance.OnUnMute;
            }
        }
    }
    public InGameUIActions @InGameUI => new InGameUIActions(this);
    public interface IInGameUIActions
    {
        void OnPauseGame(InputAction.CallbackContext context);
        void OnResumeGame(InputAction.CallbackContext context);
        void OnMainMenu(InputAction.CallbackContext context);
        void OnNextLevel(InputAction.CallbackContext context);
        void OnOpenLevelCompUI(InputAction.CallbackContext context);
        void OnCloseLevelCompUI(InputAction.CallbackContext context);
        void OnMute(InputAction.CallbackContext context);
        void OnUnMute(InputAction.CallbackContext context);
    }
}
