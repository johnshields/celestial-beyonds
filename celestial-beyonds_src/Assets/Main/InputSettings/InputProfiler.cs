//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Main/InputSettings/InputProfiler.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputProfiler : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputProfiler()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputProfiler"",
    ""maps"": [
        {
            ""name"": ""Profiler"",
            ""id"": ""f49beba3-b51d-4298-91c1-76778cf0afc4"",
            ""actions"": [
                {
                    ""name"": ""MoveKeys"",
                    ""type"": ""Button"",
                    ""id"": ""433e7d36-1d4a-4534-ac5f-90e04cb514fa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""d43905fb-ae74-4e5f-a571-2ef8f9a60faa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""100f2a91-9421-400a-a0f3-644c76d4072c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""dd9e8aa9-7ea8-4488-97ff-862b16384ae1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveController"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e2ace138-0330-43c6-bba4-c2af5ffdc4c7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""6e778ed4-7960-4d05-be51-839357fbd72e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""4240291d-bf7a-44e2-a3ed-6933b4203f42"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Unarmed"",
                    ""type"": ""Button"",
                    ""id"": ""1c2afc73-6025-4260-97be-aea0c61445c6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skip"",
                    ""type"": ""Button"",
                    ""id"": ""9053d697-3bcf-4b26-850c-a5636dc692d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JetPack"",
                    ""type"": ""Button"",
                    ""id"": ""dc6a6fa0-90a0-4213-b617-3c464c14f180"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TalkArgyle"",
                    ""type"": ""Button"",
                    ""id"": ""18e9d62c-414e-4b7a-9df0-b17a30c91170"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pollinate"",
                    ""type"": ""Button"",
                    ""id"": ""472b9a33-106c-4dff-9128-c6c5d861eebc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""805238ac-9544-4d8a-b9d3-dfef456d24ba"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveKeys"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6c7390f3-8675-42a0-a9be-fe20fa49dccd"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b284b39f-3b40-47fd-a59c-8737b6ba6b3c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3743fd10-e77b-4872-8f30-3e7ee8c58136"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""881d10fe-0695-4ce1-94e2-40703ea34e7f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""155c5541-78b2-41e8-95da-1021d95e67f9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveKeys"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7afea426-7926-4a3c-a7ee-d46c5f458fdf"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1ee3f5af-acd0-44dd-83a5-55997091482f"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4cb723d9-c233-4128-8dba-f58e8fd6577c"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ccf7c3e4-ee99-4290-bf3e-93d60771b6fb"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0448eba7-1b3c-4a14-80dc-c5ae8ee07d61"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e445b561-c31c-435f-b9a9-2a39f373eb04"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a84fe81c-ca6c-40f3-af79-7b1d5eec4a10"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ce0c4f8-7522-4a04-986f-db6ec03e37f8"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4bc11560-f570-4ebe-b5ab-39e9f31b1126"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""54dff0cd-19d0-4109-b9b8-a7f5ad922c43"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6848edb-09f0-4db7-b3c5-4f7eb43e2d8d"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveController"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ad8b6db-b7a0-4e0e-8043-32059875d4aa"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45c8c501-058a-45ed-b3ef-7b8ba69df068"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11d48ce2-9caf-4a60-ae97-bd430866b06f"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""903094cf-2fb4-4e34-b896-6f6543565a75"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f699abf-38ac-4de0-b11e-a6492f4118a5"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Unarmed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5dce2e31-613e-4491-9dd6-69fc0f19c0a5"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Unarmed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5261529-de21-4e99-aa67-3d6ad458ffa1"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed173062-3a2a-4a48-b974-4ecb2ba42099"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ffcee18-7828-4cf8-8362-7b9fb10ec970"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JetPack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5fcd5292-d7ec-4a81-90f5-2890da45f076"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JetPack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78fd17da-4c0a-4acd-85cd-1cc6329bad8f"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TalkArgyle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""166b3d92-d287-4545-a235-e41a189588ea"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TalkArgyle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c18d60f-a3b1-45e6-8776-1d2ae131c4b2"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pollinate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cce6541b-739a-418a-a619-9a64e16ee9a0"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pollinate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Profiler
        m_Profiler = asset.FindActionMap("Profiler", throwIfNotFound: true);
        m_Profiler_MoveKeys = m_Profiler.FindAction("MoveKeys", throwIfNotFound: true);
        m_Profiler_Jump = m_Profiler.FindAction("Jump", throwIfNotFound: true);
        m_Profiler_Attack = m_Profiler.FindAction("Attack", throwIfNotFound: true);
        m_Profiler_Look = m_Profiler.FindAction("Look", throwIfNotFound: true);
        m_Profiler_MoveController = m_Profiler.FindAction("MoveController", throwIfNotFound: true);
        m_Profiler_Dodge = m_Profiler.FindAction("Dodge", throwIfNotFound: true);
        m_Profiler_Shoot = m_Profiler.FindAction("Shoot", throwIfNotFound: true);
        m_Profiler_Unarmed = m_Profiler.FindAction("Unarmed", throwIfNotFound: true);
        m_Profiler_Skip = m_Profiler.FindAction("Skip", throwIfNotFound: true);
        m_Profiler_JetPack = m_Profiler.FindAction("JetPack", throwIfNotFound: true);
        m_Profiler_TalkArgyle = m_Profiler.FindAction("TalkArgyle", throwIfNotFound: true);
        m_Profiler_Pollinate = m_Profiler.FindAction("Pollinate", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Profiler
    private readonly InputActionMap m_Profiler;
    private IProfilerActions m_ProfilerActionsCallbackInterface;
    private readonly InputAction m_Profiler_MoveKeys;
    private readonly InputAction m_Profiler_Jump;
    private readonly InputAction m_Profiler_Attack;
    private readonly InputAction m_Profiler_Look;
    private readonly InputAction m_Profiler_MoveController;
    private readonly InputAction m_Profiler_Dodge;
    private readonly InputAction m_Profiler_Shoot;
    private readonly InputAction m_Profiler_Unarmed;
    private readonly InputAction m_Profiler_Skip;
    private readonly InputAction m_Profiler_JetPack;
    private readonly InputAction m_Profiler_TalkArgyle;
    private readonly InputAction m_Profiler_Pollinate;
    public struct ProfilerActions
    {
        private @InputProfiler m_Wrapper;
        public ProfilerActions(@InputProfiler wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveKeys => m_Wrapper.m_Profiler_MoveKeys;
        public InputAction @Jump => m_Wrapper.m_Profiler_Jump;
        public InputAction @Attack => m_Wrapper.m_Profiler_Attack;
        public InputAction @Look => m_Wrapper.m_Profiler_Look;
        public InputAction @MoveController => m_Wrapper.m_Profiler_MoveController;
        public InputAction @Dodge => m_Wrapper.m_Profiler_Dodge;
        public InputAction @Shoot => m_Wrapper.m_Profiler_Shoot;
        public InputAction @Unarmed => m_Wrapper.m_Profiler_Unarmed;
        public InputAction @Skip => m_Wrapper.m_Profiler_Skip;
        public InputAction @JetPack => m_Wrapper.m_Profiler_JetPack;
        public InputAction @TalkArgyle => m_Wrapper.m_Profiler_TalkArgyle;
        public InputAction @Pollinate => m_Wrapper.m_Profiler_Pollinate;
        public InputActionMap Get() { return m_Wrapper.m_Profiler; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ProfilerActions set) { return set.Get(); }
        public void SetCallbacks(IProfilerActions instance)
        {
            if (m_Wrapper.m_ProfilerActionsCallbackInterface != null)
            {
                @MoveKeys.started -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnMoveKeys;
                @MoveKeys.performed -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnMoveKeys;
                @MoveKeys.canceled -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnMoveKeys;
                @Jump.started -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnJump;
                @Attack.started -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnAttack;
                @Look.started -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnLook;
                @MoveController.started -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnMoveController;
                @MoveController.performed -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnMoveController;
                @MoveController.canceled -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnMoveController;
                @Dodge.started -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnDodge;
                @Dodge.performed -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnDodge;
                @Dodge.canceled -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnDodge;
                @Shoot.started -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnShoot;
                @Unarmed.started -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnUnarmed;
                @Unarmed.performed -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnUnarmed;
                @Unarmed.canceled -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnUnarmed;
                @Skip.started -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnSkip;
                @Skip.performed -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnSkip;
                @Skip.canceled -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnSkip;
                @JetPack.started -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnJetPack;
                @JetPack.performed -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnJetPack;
                @JetPack.canceled -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnJetPack;
                @TalkArgyle.started -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnTalkArgyle;
                @TalkArgyle.performed -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnTalkArgyle;
                @TalkArgyle.canceled -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnTalkArgyle;
                @Pollinate.started -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnPollinate;
                @Pollinate.performed -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnPollinate;
                @Pollinate.canceled -= m_Wrapper.m_ProfilerActionsCallbackInterface.OnPollinate;
            }
            m_Wrapper.m_ProfilerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveKeys.started += instance.OnMoveKeys;
                @MoveKeys.performed += instance.OnMoveKeys;
                @MoveKeys.canceled += instance.OnMoveKeys;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @MoveController.started += instance.OnMoveController;
                @MoveController.performed += instance.OnMoveController;
                @MoveController.canceled += instance.OnMoveController;
                @Dodge.started += instance.OnDodge;
                @Dodge.performed += instance.OnDodge;
                @Dodge.canceled += instance.OnDodge;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Unarmed.started += instance.OnUnarmed;
                @Unarmed.performed += instance.OnUnarmed;
                @Unarmed.canceled += instance.OnUnarmed;
                @Skip.started += instance.OnSkip;
                @Skip.performed += instance.OnSkip;
                @Skip.canceled += instance.OnSkip;
                @JetPack.started += instance.OnJetPack;
                @JetPack.performed += instance.OnJetPack;
                @JetPack.canceled += instance.OnJetPack;
                @TalkArgyle.started += instance.OnTalkArgyle;
                @TalkArgyle.performed += instance.OnTalkArgyle;
                @TalkArgyle.canceled += instance.OnTalkArgyle;
                @Pollinate.started += instance.OnPollinate;
                @Pollinate.performed += instance.OnPollinate;
                @Pollinate.canceled += instance.OnPollinate;
            }
        }
    }
    public ProfilerActions @Profiler => new ProfilerActions(this);
    public interface IProfilerActions
    {
        void OnMoveKeys(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnMoveController(InputAction.CallbackContext context);
        void OnDodge(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnUnarmed(InputAction.CallbackContext context);
        void OnSkip(InputAction.CallbackContext context);
        void OnJetPack(InputAction.CallbackContext context);
        void OnTalkArgyle(InputAction.CallbackContext context);
        void OnPollinate(InputAction.CallbackContext context);
    }
}
